{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\dk_honu\\\\Downloads\\\\lcd-serial-app-new\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validate message\n    if (!message.trim()) {\n      setStatus(\"Please enter a message\");\n      return;\n    }\n    if (message.length > 32) {\n      setStatus(\"Message too long (max 32 characters)\");\n      return;\n    }\n    setIsLoading(true);\n    setStatus(\"Sending...\");\n    try {\n      const response = await axios.post(\"http://localhost:3001/send\", {\n        message: message.trim()\n      });\n      setStatus(`✅ ${response.data.message}`);\n      setMessage(\"\"); // Clear input after successful send\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Error sending message:\", error);\n      setStatus(`❌ Error: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || \"Failed to send message\"}`);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleInputChange = e => {\n    const value = e.target.value;\n    if (value.length <= 32) {\n      setMessage(value);\n      setStatus(\"\"); // Clear status when typing\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Arduino LCD Controller\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Send messages to your Arduino LCD display\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"message-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: message,\n            onChange: handleInputChange,\n            placeholder: \"Enter your message (max 32 chars)\",\n            className: \"message-input\",\n            disabled: isLoading,\n            maxLength: 32\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"char-counter\",\n            children: [message.length, \"/32\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"send-button\",\n          disabled: isLoading || !message.trim(),\n          children: isLoading ? \"Sending...\" : \"Send to LCD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), status && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `status-message ${status.includes(\"❌\") ? \"error\" : \"success\"}`,\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Instructions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Make sure your Arduino is connected to COM3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Ensure the backend server is running on port 3001\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Messages are limited to 32 characters for LCD compatibility\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5dAJUdWbZDI2UD75JDNDDT/ZH9c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","axios","jsxDEV","_jsxDEV","App","message","setMessage","status","setStatus","isLoading","setIsLoading","handleSubmit","e","preventDefault","trim","length","response","post","data","error","_error$response","_error$response$data","console","handleInputChange","value","target","className","children","fileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","disabled","maxLength","includes","_c","$RefreshReg$"],"sources":["C:/Users/dk_honu/Downloads/lcd-serial-app-new/client/src/App.js"],"sourcesContent":["\"use client\"\n\nimport { useState } from \"react\"\nimport axios from \"axios\"\nimport \"./App.css\"\n\nfunction App() {\n  const [message, setMessage] = useState(\"\")\n  const [status, setStatus] = useState(\"\")\n  const [isLoading, setIsLoading] = useState(false)\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n\n    // Validate message\n    if (!message.trim()) {\n      setStatus(\"Please enter a message\")\n      return\n    }\n\n    if (message.length > 32) {\n      setStatus(\"Message too long (max 32 characters)\")\n      return\n    }\n\n    setIsLoading(true)\n    setStatus(\"Sending...\")\n\n    try {\n      const response = await axios.post(\"http://localhost:3001/send\", {\n        message: message.trim(),\n      })\n\n      setStatus(`✅ ${response.data.message}`)\n      setMessage(\"\") // Clear input after successful send\n    } catch (error) {\n      console.error(\"Error sending message:\", error)\n      setStatus(`❌ Error: ${error.response?.data?.error || \"Failed to send message\"}`)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const handleInputChange = (e) => {\n    const value = e.target.value\n    if (value.length <= 32) {\n      setMessage(value)\n      setStatus(\"\") // Clear status when typing\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Arduino LCD Controller</h1>\n        <p>Send messages to your Arduino LCD display</p>\n\n        <form onSubmit={handleSubmit} className=\"message-form\">\n          <div className=\"input-group\">\n            <input\n              type=\"text\"\n              value={message}\n              onChange={handleInputChange}\n              placeholder=\"Enter your message (max 32 chars)\"\n              className=\"message-input\"\n              disabled={isLoading}\n              maxLength={32}\n            />\n            <div className=\"char-counter\">{message.length}/32</div>\n          </div>\n\n          <button type=\"submit\" className=\"send-button\" disabled={isLoading || !message.trim()}>\n            {isLoading ? \"Sending...\" : \"Send to LCD\"}\n          </button>\n        </form>\n\n        {status && <div className={`status-message ${status.includes(\"❌\") ? \"error\" : \"success\"}`}>{status}</div>}\n\n        <div className=\"info-panel\">\n          <h3>Instructions:</h3>\n          <ul>\n            <li>Make sure your Arduino is connected to COM3</li>\n            <li>Ensure the backend server is running on port 3001</li>\n            <li>Messages are limited to 32 characters for LCD compatibility</li>\n          </ul>\n        </div>\n      </header>\n    </div>\n  )\n}\n\nexport default App\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}